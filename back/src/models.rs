// Generated by diesel_ext

#![allow(unused)]
#![allow(clippy::all)]

use diesel::{deserialize::Queryable, prelude::Insertable, Selectable};
use rocket::serde::json::Json;
use serde::{Deserialize, Serialize};

use crate::schema::{posts, users};

#[derive(Queryable, Debug, Serialize, Deserialize, Insertable, Selectable)]
#[diesel(table_name = posts)]
pub struct Post {
    pub id: i32,
    pub user_id: i32,
    pub title: String,
    pub body: String,
    pub published: bool,
}

#[derive(Queryable, Debug, Serialize, Deserialize, Insertable, Selectable)]
#[diesel(table_name = users)]
pub struct User {
    pub id: i32,
    pub nickname: String,
    #[serde(skip_serializing)]
    password: String,
}

impl User {
    pub fn new(id: i32, nickname: &String, password: &String) -> Self {
        User {
            id,
            nickname: nickname.clone(),
            password: password.clone()
        }
    }
}

impl From<Json<User>> for User {
    fn from(value: Json<User>) -> Self {
        User {
            id: value.id,
            nickname: value.nickname.clone(),
            password: value.password.clone()
        }
    }
}
